source /etc/profile
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
# ZSH_THEME="eastwood"
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git docker)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


alias ll='ls -la'
alias rr="source ~/.zshrc"

eval `keychain --eval --agents ssh id_rsa`
export PATH=$HOME/.local/opt/pytools/bin:$PATH

# Created by `pipx` on 2024-06-27 11:15:42
export PATH="$PATH:/home/ti08755/.local/bin"

mydocker() {
    docker ps --format "table {{.ID}}\t{{.CreatedAt}}\t{{.Status}}\t\t\t  {{.Ports}}\t       {{.Names}}" | \
    awk '
    BEGIN {
        print "\033[1;34mCONTAINER ID\tCREATED\t\t\t\tSTATUS\t\t\t\t      PORTS\t\t\t\t\t NAMES\033[0m"
    }
    /Up/ {
        printf "\033[1;32m%s\033[0m\n", $0  # Green for running
    }
    '
    echo

    docker ps -a --filter "status=exited" --format "table {{.ID}}\t{{.CreatedAt}}\t{{.Status}}\t\t{{.Ports}}\t\t{{.Names}}" | \
    awk '
    BEGIN {
       print "\033[1;34mCONTAINER ID\tCREATED\t\t\t\tSTATUS\t\t\t\t      PORTS\t\t\t\t\t NAMES\033[0m"
    }
    /Up/ {
        printf "\033[1;32m%s\033[0m\n", $0  # Green for running
    }
    /Exited/ {
        printf "\033[1;31m%s\033[0m\n", $0  # Red for stopped
    }
    '
}


dp() {
    echo -e "\033[1;34m"
    printf "%-20s %-30s %-50s %-30s \n" "CONTAINER ID" "STATUS" "NAMES" "PORTS"
    echo -e "\033[0m"

    # Get only running containers, grouped by compose project name
    docker ps --format "{{.ID}}\t{{.Names}}\t{{.Ports}}\t{{.CreatedAt}}\t{{.Status}}\t{{.Label \"com.docker.compose.project\"}}" | \
    sort -k6 | \
    while IFS=$'\t' read -r id names ports created state project; do
        # If no project name, set as "No Compose Project"
        project=${project:-"No Compose Project"}

        # Display project name as a header if changed
        if [[ "$last_project" != "$project" ]]; then
            echo ""
            echo -e "\033[1;33m### Project: $project ###\033[0m"
            last_project="$project"
        fi
        
        # Color by state
        color="\033[1;32m"  # Green for running containers

        # Check and color the ports in red if they contain '0.0.0.0:'
        if [[ "$ports" == *"0.0.0.0:"* ]]; then
            ports="\033[1;31m$ports\033[0m"  # Red color for public ports
        fi
        
        
        # Print each row with fixed width
        echo -e "$color\c"
        printf "%-20s %-30s %-50s $ports \n" "$id" "$state" "$names"
        echo -e "\033[0m\c"
    done
}
